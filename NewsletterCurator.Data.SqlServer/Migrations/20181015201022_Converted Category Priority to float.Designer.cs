// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsletterCurator.Data;

namespace NewsletterCurator.Data.Migrations
{
    [DbContext(typeof(NewsletterCuratorContext))]
    [Migration("20181015201022_Converted Category Priority to float")]
    partial class ConvertedCategoryPrioritytofloat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewsletterCurator.Data.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<float>("Priority");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new { ID = new Guid("bbf3205e-578b-4568-9d86-7c15fceb6a4f"), Name = "DevOps", Priority = 3f },
                        new { ID = new Guid("3f9acf3f-bf48-455d-9a3f-f660cd3a13b3"), Name = "Front End", Priority = 2f },
                        new { ID = new Guid("57e0baf7-3b80-4866-b9ae-3a2e77ad88fb"), Name = "AI", Priority = 7f },
                        new { ID = new Guid("12e0baf7-3b80-4866-b9ae-3a2e77ad88fb"), Name = "Space", Priority = 10f },
                        new { ID = new Guid("40e0baf7-3b80-4866-b9ae-3a2e77ad88fb"), Name = "Security", Priority = 5f },
                        new { ID = new Guid("44754987-6f3f-4b5e-a79d-a61b13a61647"), Name = "iGaming", Priority = 9f },
                        new { ID = new Guid("497ff497-33d2-434c-a1db-5a722d94078f"), Name = "General Tech", Priority = 8f },
                        new { ID = new Guid("527ff497-33d2-434c-a1db-5a722d94078f"), Name = "Infrastructure", Priority = 4f },
                        new { ID = new Guid("317ff497-33d2-434c-a1db-5a722d94078f"), Name = "Software Development", Priority = 0f },
                        new { ID = new Guid("847ff497-33a2-424c-a1db-5a722d94078f"), Name = "Design", Priority = 6f },
                        new { ID = new Guid("e17226a6-bed1-44f5-863f-3970bb634fce"), Name = ".NET", Priority = 1f }
                    );
                });

            modelBuilder.Entity("NewsletterCurator.Data.Newsitem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryID");

                    b.Property<DateTimeOffset>("DateTime");

                    b.Property<string>("ImageURL");

                    b.Property<bool>("IsAlreadySent");

                    b.Property<string>("Summary")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("URL")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasAlternateKey("URL");

                    b.HasIndex("CategoryID");

                    b.ToTable("Newsitems");
                });

            modelBuilder.Entity("NewsletterCurator.Data.Subscriber", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("DateSubscribed");

                    b.Property<DateTimeOffset?>("DateUnsubscribed");

                    b.Property<DateTimeOffset?>("DateValidated");

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("NewsletterCurator.Data.Newsitem", b =>
                {
                    b.HasOne("NewsletterCurator.Data.Category", "Category")
                        .WithMany("Newsitems")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
